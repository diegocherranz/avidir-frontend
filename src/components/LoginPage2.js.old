import React, { Component } from 'react'
import { Button, Container, Nav, Navbar } from 'react-bootstrap'
import { Authenticator, FieldGroupIcon, IconInfo, translations } from '@aws-amplify/ui-react'
import { Auth } from 'aws-amplify'
import '@aws-amplify/ui-react/styles.css'
import { I18n } from 'aws-amplify';
import { PersonFill, KeyFill, CalendarDate, text } from 'react-bootstrap-icons';


I18n.putVocabularies(translations);
I18n.setLanguage('es');

I18n.putVocabularies({
    es: {
        'Create Account': 'Registrarse'
    }
});

const formFields = {
    signIn: {
        username: {
            labelHidden: true,
            isRequired: true,
            innerStartComponent: <FieldGroupIcon ariaLabel=""><PersonFill /></FieldGroupIcon>
        },
        password: {
            labelHidden: true,
            isRequired: true,
            innerStartComponent: <FieldGroupIcon ariaLabel=""><KeyFill /></FieldGroupIcon>
        },
    },
    signUp: {
        email: {
            labelHidden: true,
            isRequired: true,
            innerStartComponent: <FieldGroupIcon ariaLabel=""><PersonFill /></FieldGroupIcon>
        },
        password: {
            labelHidden: true,
            isRequired: true,
            innerStartComponent: <FieldGroupIcon ariaLabel=""><KeyFill /></FieldGroupIcon>
        },
        confirm_password: {
            labelHidden: true,
            isRequired: true,
            innerStartComponent: <FieldGroupIcon ariaLabel=""><KeyFill /></FieldGroupIcon>
        },
        given_name:{
            labelHidden: true,
            isRequired: true,
            placeholder: 'Nombre'
        },
        family_name:{
            labelHidden: true,
            isRequired: true,
            placeholder: 'Apellidos'
        },
        birthdate:{
            labelHidden: true,
            isRequired: true,
            innerStartComponent: <FieldGroupIcon ariaLabel=""><CalendarDate/></FieldGroupIcon>,
            placeholder: 'Fecha de nacimiento'
        }
    }
}
let user;

async function ionViewCanEnter() {
    try {
        user =  await Auth.currentAuthenticatedUser();
        return user;
    } catch {
        return null;
    }
}


class LoginPage extends Component {
    render() {
        return (
            <Container className="mt-5">
                <Authenticator className='pt-5' formFields={formFields} loginMechanisms={['email']}>
                    {({ signOut, user }) => (
                        <Container className='justify-content-center'>
                            <h4>Bienvenido, {user.attributes.email}</h4>
                            <h3>Este es el listado de actividades</h3>
                            <Button onClick={signOut}>Cerrar sesi√≥n</Button>
                        </Container>

                    )}
                </Authenticator>
            </Container>


        );
    }
}

export default LoginPage;